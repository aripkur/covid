{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","death","loading","LinearProgress","url","fetchData","country","a","gantiUrl","axios","get","console","log","fetchDailyDate","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dayliData","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchApiCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","ambilData","setState","this","typo","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6a61af6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__j6Sh4\",\"card\":\"Cards_card__1Pqli\",\"loading\":\"Cards_loading__2pd09\",\"infected\":\"Cards_infected__aYqZT\",\"recovered\":\"Cards_recovered__2yiE3\",\"death\":\"Cards_death__2epG7\"};","import React from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return (\r\n      <div className={styles.loading}>\r\n        <LinearProgress color=\"secondary\" />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Terinfeksi\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Jumlah positif terinfeksi Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Sembuh\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Jumlah sembuh dari Covid-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.death)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Meninggal\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Jumlah meninggal dari Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async country => {\r\n  let gantiUrl = url;\r\n  if (country && country !== \"global\") {\r\n    gantiUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate }\r\n    } = await axios.get(gantiUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchDailyDate = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries }\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map(country => country.name);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyDate } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dayliData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyDate());\r\n    };\r\n    console.log(\"oeee hook render\");\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const lineChart = dayliData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dayliData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dayliData.map(({ confirmed }) => confirmed),\r\n            label: \"Terinfeksi\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dayliData.map(({ deaths }) => deaths),\r\n            label: \"Meninggal\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true\r\n          }\r\n        ]\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Terinfeksi\", \"Sembuh\", \"Meninggal\"],\r\n        datasets: [\r\n          {\r\n            label: \"Orang\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\"\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Keadaan sekarang di ${country}` }\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country && country !== \"global\" ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApiCountries = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n    fetchApiCountries();\r\n  }, []);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={e => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"global\">Global</option>\r\n        {countries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport { Typography } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const ambilData = await fetchData();\n    this.setState({ data: ambilData });\n  }\n\n  handleCountryChange = async country => {\n    const ambilData = await fetchData(country);\n    this.setState({ data: ambilData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    console.log(data);\n    return !data ? (\n      \"ooeee\"\n    ) : (\n      <div className={styles.container}>\n        <Typography variant=\"h3\">COVID-19</Typography>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          className={styles.typo}\n        >\n          sumber data : https://covid19.mathdro.id/api\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3LkrV\",\"typo\":\"App_typo__2Yfyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Lru2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2gP8G\"};"],"sourceRoot":""}